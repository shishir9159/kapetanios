// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.1
// 	protoc        v5.28.1
// source: proto/cert-expiration.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PrerequisitesExpiration struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EtcdStatus   bool   `protobuf:"varint,1,opt,name=etcdStatus,proto3" json:"etcdStatus,omitempty"`
	DiskPressure bool   `protobuf:"varint,2,opt,name=diskPressure,proto3" json:"diskPressure,omitempty"`
	Err          string `protobuf:"bytes,3,opt,name=err,proto3" json:"err,omitempty"`
}

func (x *PrerequisitesExpiration) Reset() {
	*x = PrerequisitesExpiration{}
	mi := &file_proto_cert_expiration_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PrerequisitesExpiration) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PrerequisitesExpiration) ProtoMessage() {}

func (x *PrerequisitesExpiration) ProtoReflect() protoreflect.Message {
	mi := &file_proto_cert_expiration_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PrerequisitesExpiration.ProtoReflect.Descriptor instead.
func (*PrerequisitesExpiration) Descriptor() ([]byte, []int) {
	return file_proto_cert_expiration_proto_rawDescGZIP(), []int{0}
}

func (x *PrerequisitesExpiration) GetEtcdStatus() bool {
	if x != nil {
		return x.EtcdStatus
	}
	return false
}

func (x *PrerequisitesExpiration) GetDiskPressure() bool {
	if x != nil {
		return x.DiskPressure
	}
	return false
}

func (x *PrerequisitesExpiration) GetErr() string {
	if x != nil {
		return x.Err
	}
	return ""
}

type Expiration struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ValidCertificate     bool                    `protobuf:"varint,1,opt,name=validCertificate,proto3" json:"validCertificate,omitempty"`
	Certificate          []*Certificate          `protobuf:"bytes,2,rep,name=certificate,proto3" json:"certificate,omitempty"`
	CertificateAuthority []*CertificateAuthority `protobuf:"bytes,3,rep,name=certificateAuthority,proto3" json:"certificateAuthority,omitempty"`
}

func (x *Expiration) Reset() {
	*x = Expiration{}
	mi := &file_proto_cert_expiration_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Expiration) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Expiration) ProtoMessage() {}

func (x *Expiration) ProtoReflect() protoreflect.Message {
	mi := &file_proto_cert_expiration_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Expiration.ProtoReflect.Descriptor instead.
func (*Expiration) Descriptor() ([]byte, []int) {
	return file_proto_cert_expiration_proto_rawDescGZIP(), []int{1}
}

func (x *Expiration) GetValidCertificate() bool {
	if x != nil {
		return x.ValidCertificate
	}
	return false
}

func (x *Expiration) GetCertificate() []*Certificate {
	if x != nil {
		return x.Certificate
	}
	return nil
}

func (x *Expiration) GetCertificateAuthority() []*CertificateAuthority {
	if x != nil {
		return x.CertificateAuthority
	}
	return nil
}

type Certificate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name                 string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Expires              string `protobuf:"bytes,2,opt,name=expires,proto3" json:"expires,omitempty"`
	ResidualTime         string `protobuf:"bytes,3,opt,name=residualTime,proto3" json:"residualTime,omitempty"`
	CertificateAuthority string `protobuf:"bytes,4,opt,name=certificateAuthority,proto3" json:"certificateAuthority,omitempty"`
	ExternallyManaged    string `protobuf:"bytes,5,opt,name=externallyManaged,proto3" json:"externallyManaged,omitempty"`
}

func (x *Certificate) Reset() {
	*x = Certificate{}
	mi := &file_proto_cert_expiration_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Certificate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Certificate) ProtoMessage() {}

func (x *Certificate) ProtoReflect() protoreflect.Message {
	mi := &file_proto_cert_expiration_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Certificate.ProtoReflect.Descriptor instead.
func (*Certificate) Descriptor() ([]byte, []int) {
	return file_proto_cert_expiration_proto_rawDescGZIP(), []int{2}
}

func (x *Certificate) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Certificate) GetExpires() string {
	if x != nil {
		return x.Expires
	}
	return ""
}

func (x *Certificate) GetResidualTime() string {
	if x != nil {
		return x.ResidualTime
	}
	return ""
}

func (x *Certificate) GetCertificateAuthority() string {
	if x != nil {
		return x.CertificateAuthority
	}
	return ""
}

func (x *Certificate) GetExternallyManaged() string {
	if x != nil {
		return x.ExternallyManaged
	}
	return ""
}

type CertificateAuthority struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name              string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Expires           string `protobuf:"bytes,2,opt,name=expires,proto3" json:"expires,omitempty"`
	ResidualTime      string `protobuf:"bytes,3,opt,name=residualTime,proto3" json:"residualTime,omitempty"`
	ExternallyManaged string `protobuf:"bytes,4,opt,name=externallyManaged,proto3" json:"externallyManaged,omitempty"`
}

func (x *CertificateAuthority) Reset() {
	*x = CertificateAuthority{}
	mi := &file_proto_cert_expiration_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CertificateAuthority) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CertificateAuthority) ProtoMessage() {}

func (x *CertificateAuthority) ProtoReflect() protoreflect.Message {
	mi := &file_proto_cert_expiration_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CertificateAuthority.ProtoReflect.Descriptor instead.
func (*CertificateAuthority) Descriptor() ([]byte, []int) {
	return file_proto_cert_expiration_proto_rawDescGZIP(), []int{3}
}

func (x *CertificateAuthority) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CertificateAuthority) GetExpires() string {
	if x != nil {
		return x.Expires
	}
	return ""
}

func (x *CertificateAuthority) GetResidualTime() string {
	if x != nil {
		return x.ResidualTime
	}
	return ""
}

func (x *CertificateAuthority) GetExternallyManaged() string {
	if x != nil {
		return x.ExternallyManaged
	}
	return ""
}

type CertificateValidityResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Received bool `protobuf:"varint,1,opt,name=received,proto3" json:"received,omitempty"`
}

func (x *CertificateValidityResponse) Reset() {
	*x = CertificateValidityResponse{}
	mi := &file_proto_cert_expiration_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CertificateValidityResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CertificateValidityResponse) ProtoMessage() {}

func (x *CertificateValidityResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_cert_expiration_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CertificateValidityResponse.ProtoReflect.Descriptor instead.
func (*CertificateValidityResponse) Descriptor() ([]byte, []int) {
	return file_proto_cert_expiration_proto_rawDescGZIP(), []int{4}
}

func (x *CertificateValidityResponse) GetReceived() bool {
	if x != nil {
		return x.Received
	}
	return false
}

var File_proto_cert_expiration_proto protoreflect.FileDescriptor

var file_proto_cert_expiration_proto_rawDesc = []byte{
	0x0a, 0x1b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x63, 0x65, 0x72, 0x74, 0x2d, 0x65, 0x78, 0x70,
	0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x6f, 0x0a,
	0x17, 0x50, 0x72, 0x65, 0x72, 0x65, 0x71, 0x75, 0x69, 0x73, 0x69, 0x74, 0x65, 0x73, 0x45, 0x78,
	0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x65, 0x74, 0x63, 0x64,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x65, 0x74,
	0x63, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x64, 0x69, 0x73, 0x6b,
	0x50, 0x72, 0x65, 0x73, 0x73, 0x75, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c,
	0x64, 0x69, 0x73, 0x6b, 0x50, 0x72, 0x65, 0x73, 0x73, 0x75, 0x72, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x65, 0x72, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x65, 0x72, 0x72, 0x22, 0xb3,
	0x01, 0x0a, 0x0a, 0x45, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2a, 0x0a,
	0x10, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x43, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x43, 0x65,
	0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x12, 0x2e, 0x0a, 0x0b, 0x63, 0x65, 0x72,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c,
	0x2e, 0x43, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x52, 0x0b, 0x63, 0x65,
	0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x12, 0x49, 0x0a, 0x14, 0x63, 0x65, 0x72,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x74,
	0x79, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x43, 0x65, 0x72, 0x74, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x65, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x52, 0x14,
	0x63, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x41, 0x75, 0x74, 0x68, 0x6f,
	0x72, 0x69, 0x74, 0x79, 0x22, 0xc1, 0x01, 0x0a, 0x0b, 0x43, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x78, 0x70, 0x69,
	0x72, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x78, 0x70, 0x69, 0x72,
	0x65, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x72, 0x65, 0x73, 0x69, 0x64, 0x75, 0x61, 0x6c, 0x54, 0x69,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x69, 0x64, 0x75,
	0x61, 0x6c, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x32, 0x0a, 0x14, 0x63, 0x65, 0x72, 0x74, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x65, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x63, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x65, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x12, 0x2c, 0x0a, 0x11, 0x65, 0x78,
	0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x6c, 0x79, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x64, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x6c,
	0x79, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x64, 0x22, 0x96, 0x01, 0x0a, 0x14, 0x43, 0x65, 0x72,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x74,
	0x79, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x12,
	0x22, 0x0a, 0x0c, 0x72, 0x65, 0x73, 0x69, 0x64, 0x75, 0x61, 0x6c, 0x54, 0x69, 0x6d, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x69, 0x64, 0x75, 0x61, 0x6c, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x2c, 0x0a, 0x11, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x6c,
	0x79, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11,
	0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x6c, 0x79, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x64, 0x22, 0x39, 0x0a, 0x1b, 0x43, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65,
	0x56, 0x61, 0x6c, 0x69, 0x64, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x08, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x32, 0x98, 0x01, 0x0a,
	0x08, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x69, 0x74, 0x79, 0x12, 0x4f, 0x0a, 0x15, 0x43, 0x6c, 0x75,
	0x73, 0x74, 0x65, 0x72, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x69,
	0x6e, 0x67, 0x12, 0x18, 0x2e, 0x50, 0x72, 0x65, 0x72, 0x65, 0x71, 0x75, 0x69, 0x73, 0x69, 0x74,
	0x65, 0x73, 0x45, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x1c, 0x2e, 0x43,
	0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x69,
	0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3b, 0x0a, 0x0e, 0x45, 0x78,
	0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0b, 0x2e, 0x45,
	0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x1c, 0x2e, 0x43, 0x65, 0x72, 0x74,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x69, 0x74, 0x79, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x29, 0x5a, 0x27, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x68, 0x69, 0x73, 0x68, 0x69, 0x72, 0x39, 0x31, 0x35,
	0x39, 0x2f, 0x6b, 0x61, 0x70, 0x65, 0x74, 0x61, 0x6e, 0x69, 0x6f, 0x73, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_cert_expiration_proto_rawDescOnce sync.Once
	file_proto_cert_expiration_proto_rawDescData = file_proto_cert_expiration_proto_rawDesc
)

func file_proto_cert_expiration_proto_rawDescGZIP() []byte {
	file_proto_cert_expiration_proto_rawDescOnce.Do(func() {
		file_proto_cert_expiration_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_cert_expiration_proto_rawDescData)
	})
	return file_proto_cert_expiration_proto_rawDescData
}

var file_proto_cert_expiration_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_proto_cert_expiration_proto_goTypes = []any{
	(*PrerequisitesExpiration)(nil),     // 0: PrerequisitesExpiration
	(*Expiration)(nil),                  // 1: Expiration
	(*Certificate)(nil),                 // 2: Certificate
	(*CertificateAuthority)(nil),        // 3: CertificateAuthority
	(*CertificateValidityResponse)(nil), // 4: CertificateValidityResponse
}
var file_proto_cert_expiration_proto_depIdxs = []int32{
	2, // 0: Expiration.certificate:type_name -> Certificate
	3, // 1: Expiration.certificateAuthority:type_name -> CertificateAuthority
	0, // 2: Validity.ClusterHealthChecking:input_type -> PrerequisitesExpiration
	1, // 3: Validity.ExpirationInfo:input_type -> Expiration
	4, // 4: Validity.ClusterHealthChecking:output_type -> CertificateValidityResponse
	4, // 5: Validity.ExpirationInfo:output_type -> CertificateValidityResponse
	4, // [4:6] is the sub-list for method output_type
	2, // [2:4] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_proto_cert_expiration_proto_init() }
func file_proto_cert_expiration_proto_init() {
	if File_proto_cert_expiration_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_cert_expiration_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_cert_expiration_proto_goTypes,
		DependencyIndexes: file_proto_cert_expiration_proto_depIdxs,
		MessageInfos:      file_proto_cert_expiration_proto_msgTypes,
	}.Build()
	File_proto_cert_expiration_proto = out.File
	file_proto_cert_expiration_proto_rawDesc = nil
	file_proto_cert_expiration_proto_goTypes = nil
	file_proto_cert_expiration_proto_depIdxs = nil
}

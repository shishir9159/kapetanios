// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.1
// 	protoc        v5.28.1
// source: proto/minor-upgrade.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PrerequisitesMinorUpgrade struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EtcdStatus          bool   `protobuf:"varint,1,opt,name=etcdStatus,proto3" json:"etcdStatus,omitempty"`
	StorageAvailability uint64 `protobuf:"varint,2,opt,name=storageAvailability,proto3" json:"storageAvailability,omitempty"`
	Err                 string `protobuf:"bytes,3,opt,name=err,proto3" json:"err,omitempty"`
}

func (x *PrerequisitesMinorUpgrade) Reset() {
	*x = PrerequisitesMinorUpgrade{}
	mi := &file_proto_minor_upgrade_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PrerequisitesMinorUpgrade) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PrerequisitesMinorUpgrade) ProtoMessage() {}

func (x *PrerequisitesMinorUpgrade) ProtoReflect() protoreflect.Message {
	mi := &file_proto_minor_upgrade_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PrerequisitesMinorUpgrade.ProtoReflect.Descriptor instead.
func (*PrerequisitesMinorUpgrade) Descriptor() ([]byte, []int) {
	return file_proto_minor_upgrade_proto_rawDescGZIP(), []int{0}
}

func (x *PrerequisitesMinorUpgrade) GetEtcdStatus() bool {
	if x != nil {
		return x.EtcdStatus
	}
	return false
}

func (x *PrerequisitesMinorUpgrade) GetStorageAvailability() uint64 {
	if x != nil {
		return x.StorageAvailability
	}
	return 0
}

func (x *PrerequisitesMinorUpgrade) GetErr() string {
	if x != nil {
		return x.Err
	}
	return ""
}

type AvailableVersions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version []string `protobuf:"bytes,1,rep,name=version,proto3" json:"version,omitempty"`
	Err     string   `protobuf:"bytes,2,opt,name=err,proto3" json:"err,omitempty"`
}

func (x *AvailableVersions) Reset() {
	*x = AvailableVersions{}
	mi := &file_proto_minor_upgrade_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AvailableVersions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AvailableVersions) ProtoMessage() {}

func (x *AvailableVersions) ProtoReflect() protoreflect.Message {
	mi := &file_proto_minor_upgrade_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AvailableVersions.ProtoReflect.Descriptor instead.
func (*AvailableVersions) Descriptor() ([]byte, []int) {
	return file_proto_minor_upgrade_proto_rawDescGZIP(), []int{1}
}

func (x *AvailableVersions) GetVersion() []string {
	if x != nil {
		return x.Version
	}
	return nil
}

func (x *AvailableVersions) GetErr() string {
	if x != nil {
		return x.Err
	}
	return ""
}

type UpgradeCompatibility struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OsCompatibility bool   `protobuf:"varint,1,opt,name=osCompatibility,proto3" json:"osCompatibility,omitempty"`
	Diff            string `protobuf:"bytes,2,opt,name=diff,proto3" json:"diff,omitempty"`
	Err             string `protobuf:"bytes,3,opt,name=err,proto3" json:"err,omitempty"`
}

func (x *UpgradeCompatibility) Reset() {
	*x = UpgradeCompatibility{}
	mi := &file_proto_minor_upgrade_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpgradeCompatibility) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpgradeCompatibility) ProtoMessage() {}

func (x *UpgradeCompatibility) ProtoReflect() protoreflect.Message {
	mi := &file_proto_minor_upgrade_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpgradeCompatibility.ProtoReflect.Descriptor instead.
func (*UpgradeCompatibility) Descriptor() ([]byte, []int) {
	return file_proto_minor_upgrade_proto_rawDescGZIP(), []int{2}
}

func (x *UpgradeCompatibility) GetOsCompatibility() bool {
	if x != nil {
		return x.OsCompatibility
	}
	return false
}

func (x *UpgradeCompatibility) GetDiff() string {
	if x != nil {
		return x.Diff
	}
	return ""
}

func (x *UpgradeCompatibility) GetErr() string {
	if x != nil {
		return x.Err
	}
	return ""
}

type KubeadmUpgrade struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	KubeadmUpgradeSuccess bool   `protobuf:"varint,1,opt,name=kubeadmUpgradeSuccess,proto3" json:"kubeadmUpgradeSuccess,omitempty"`
	Log                   string `protobuf:"bytes,2,opt,name=log,proto3" json:"log,omitempty"`
	Err                   string `protobuf:"bytes,3,opt,name=err,proto3" json:"err,omitempty"`
}

func (x *KubeadmUpgrade) Reset() {
	*x = KubeadmUpgrade{}
	mi := &file_proto_minor_upgrade_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *KubeadmUpgrade) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KubeadmUpgrade) ProtoMessage() {}

func (x *KubeadmUpgrade) ProtoReflect() protoreflect.Message {
	mi := &file_proto_minor_upgrade_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KubeadmUpgrade.ProtoReflect.Descriptor instead.
func (*KubeadmUpgrade) Descriptor() ([]byte, []int) {
	return file_proto_minor_upgrade_proto_rawDescGZIP(), []int{3}
}

func (x *KubeadmUpgrade) GetKubeadmUpgradeSuccess() bool {
	if x != nil {
		return x.KubeadmUpgradeSuccess
	}
	return false
}

func (x *KubeadmUpgrade) GetLog() string {
	if x != nil {
		return x.Log
	}
	return ""
}

func (x *KubeadmUpgrade) GetErr() string {
	if x != nil {
		return x.Err
	}
	return ""
}

type UpgradePlan struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	KubeadmUpgradeSuccess bool   `protobuf:"varint,1,opt,name=kubeadmUpgradeSuccess,proto3" json:"kubeadmUpgradeSuccess,omitempty"`
	ClusterVersion        string `protobuf:"bytes,2,opt,name=clusterVersion,proto3" json:"clusterVersion,omitempty"`
	Log                   string `protobuf:"bytes,3,opt,name=log,proto3" json:"log,omitempty"`
	Err                   string `protobuf:"bytes,4,opt,name=err,proto3" json:"err,omitempty"`
}

func (x *UpgradePlan) Reset() {
	*x = UpgradePlan{}
	mi := &file_proto_minor_upgrade_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpgradePlan) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpgradePlan) ProtoMessage() {}

func (x *UpgradePlan) ProtoReflect() protoreflect.Message {
	mi := &file_proto_minor_upgrade_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpgradePlan.ProtoReflect.Descriptor instead.
func (*UpgradePlan) Descriptor() ([]byte, []int) {
	return file_proto_minor_upgrade_proto_rawDescGZIP(), []int{4}
}

func (x *UpgradePlan) GetKubeadmUpgradeSuccess() bool {
	if x != nil {
		return x.KubeadmUpgradeSuccess
	}
	return false
}

func (x *UpgradePlan) GetClusterVersion() string {
	if x != nil {
		return x.ClusterVersion
	}
	return ""
}

func (x *UpgradePlan) GetLog() string {
	if x != nil {
		return x.Log
	}
	return ""
}

func (x *UpgradePlan) GetErr() string {
	if x != nil {
		return x.Err
	}
	return ""
}

type ClusterUpgradeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ClusterUpgradeRequest) Reset() {
	*x = ClusterUpgradeRequest{}
	mi := &file_proto_minor_upgrade_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClusterUpgradeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClusterUpgradeRequest) ProtoMessage() {}

func (x *ClusterUpgradeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_minor_upgrade_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClusterUpgradeRequest.ProtoReflect.Descriptor instead.
func (*ClusterUpgradeRequest) Descriptor() ([]byte, []int) {
	return file_proto_minor_upgrade_proto_rawDescGZIP(), []int{5}
}

type ClusterUpgrade struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PrerequisiteCheckSuccess bool   `protobuf:"varint,1,opt,name=prerequisiteCheckSuccess,proto3" json:"prerequisiteCheckSuccess,omitempty"`
	UpgradeSuccess           bool   `protobuf:"varint,2,opt,name=upgradeSuccess,proto3" json:"upgradeSuccess,omitempty"`
	RestartSuccess           bool   `protobuf:"varint,3,opt,name=restartSuccess,proto3" json:"restartSuccess,omitempty"`
	RetryAttempt             uint32 `protobuf:"varint,4,opt,name=retryAttempt,proto3" json:"retryAttempt,omitempty"`
	Log                      string `protobuf:"bytes,5,opt,name=log,proto3" json:"log,omitempty"`
	Err                      string `protobuf:"bytes,6,opt,name=err,proto3" json:"err,omitempty"`
}

func (x *ClusterUpgrade) Reset() {
	*x = ClusterUpgrade{}
	mi := &file_proto_minor_upgrade_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClusterUpgrade) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClusterUpgrade) ProtoMessage() {}

func (x *ClusterUpgrade) ProtoReflect() protoreflect.Message {
	mi := &file_proto_minor_upgrade_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClusterUpgrade.ProtoReflect.Descriptor instead.
func (*ClusterUpgrade) Descriptor() ([]byte, []int) {
	return file_proto_minor_upgrade_proto_rawDescGZIP(), []int{6}
}

func (x *ClusterUpgrade) GetPrerequisiteCheckSuccess() bool {
	if x != nil {
		return x.PrerequisiteCheckSuccess
	}
	return false
}

func (x *ClusterUpgrade) GetUpgradeSuccess() bool {
	if x != nil {
		return x.UpgradeSuccess
	}
	return false
}

func (x *ClusterUpgrade) GetRestartSuccess() bool {
	if x != nil {
		return x.RestartSuccess
	}
	return false
}

func (x *ClusterUpgrade) GetRetryAttempt() uint32 {
	if x != nil {
		return x.RetryAttempt
	}
	return 0
}

func (x *ClusterUpgrade) GetLog() string {
	if x != nil {
		return x.Log
	}
	return ""
}

func (x *ClusterUpgrade) GetErr() string {
	if x != nil {
		return x.Err
	}
	return ""
}

type CreateUpgradeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProceedNextStep      bool `protobuf:"varint,1,opt,name=proceedNextStep,proto3" json:"proceedNextStep,omitempty"`
	SkipRetryCurrentStep bool `protobuf:"varint,2,opt,name=skipRetryCurrentStep,proto3" json:"skipRetryCurrentStep,omitempty"`
	TerminateApplication bool `protobuf:"varint,3,opt,name=terminateApplication,proto3" json:"terminateApplication,omitempty"`
}

func (x *CreateUpgradeResponse) Reset() {
	*x = CreateUpgradeResponse{}
	mi := &file_proto_minor_upgrade_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateUpgradeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateUpgradeResponse) ProtoMessage() {}

func (x *CreateUpgradeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_minor_upgrade_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateUpgradeResponse.ProtoReflect.Descriptor instead.
func (*CreateUpgradeResponse) Descriptor() ([]byte, []int) {
	return file_proto_minor_upgrade_proto_rawDescGZIP(), []int{7}
}

func (x *CreateUpgradeResponse) GetProceedNextStep() bool {
	if x != nil {
		return x.ProceedNextStep
	}
	return false
}

func (x *CreateUpgradeResponse) GetSkipRetryCurrentStep() bool {
	if x != nil {
		return x.SkipRetryCurrentStep
	}
	return false
}

func (x *CreateUpgradeResponse) GetTerminateApplication() bool {
	if x != nil {
		return x.TerminateApplication
	}
	return false
}

var File_proto_minor_upgrade_proto protoreflect.FileDescriptor

var file_proto_minor_upgrade_proto_rawDesc = []byte{
	0x0a, 0x19, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6d, 0x69, 0x6e, 0x6f, 0x72, 0x2d, 0x75, 0x70,
	0x67, 0x72, 0x61, 0x64, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x7f, 0x0a, 0x19, 0x50,
	0x72, 0x65, 0x72, 0x65, 0x71, 0x75, 0x69, 0x73, 0x69, 0x74, 0x65, 0x73, 0x4d, 0x69, 0x6e, 0x6f,
	0x72, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x65, 0x74, 0x63, 0x64,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x65, 0x74,
	0x63, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x30, 0x0a, 0x13, 0x73, 0x74, 0x6f, 0x72,
	0x61, 0x67, 0x65, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x13, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x41, 0x76,
	0x61, 0x69, 0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x72,
	0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x65, 0x72, 0x72, 0x22, 0x3f, 0x0a, 0x11,
	0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x73, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x65,
	0x72, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x65, 0x72, 0x72, 0x22, 0x66, 0x0a,
	0x14, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x74, 0x69, 0x62,
	0x69, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x28, 0x0a, 0x0f, 0x6f, 0x73, 0x43, 0x6f, 0x6d, 0x70, 0x61,
	0x74, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f,
	0x6f, 0x73, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x74, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x12,
	0x12, 0x0a, 0x04, 0x64, 0x69, 0x66, 0x66, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64,
	0x69, 0x66, 0x66, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x65, 0x72, 0x72, 0x22, 0x6a, 0x0a, 0x0e, 0x6b, 0x75, 0x62, 0x65, 0x61, 0x64, 0x6d,
	0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x12, 0x34, 0x0a, 0x15, 0x6b, 0x75, 0x62, 0x65, 0x61,
	0x64, 0x6d, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x15, 0x6b, 0x75, 0x62, 0x65, 0x61, 0x64, 0x6d, 0x55,
	0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x10, 0x0a,
	0x03, 0x6c, 0x6f, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6c, 0x6f, 0x67, 0x12,
	0x10, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x65, 0x72,
	0x72, 0x22, 0x8f, 0x01, 0x0a, 0x0b, 0x75, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x50, 0x6c, 0x61,
	0x6e, 0x12, 0x34, 0x0a, 0x15, 0x6b, 0x75, 0x62, 0x65, 0x61, 0x64, 0x6d, 0x55, 0x70, 0x67, 0x72,
	0x61, 0x64, 0x65, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x15, 0x6b, 0x75, 0x62, 0x65, 0x61, 0x64, 0x6d, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65,
	0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x26, 0x0a, 0x0e, 0x63, 0x6c, 0x75, 0x73, 0x74,
	0x65, 0x72, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0e, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12,
	0x10, 0x0a, 0x03, 0x6c, 0x6f, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6c, 0x6f,
	0x67, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x65, 0x72, 0x72, 0x22, 0x17, 0x0a, 0x15, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x55, 0x70,
	0x67, 0x72, 0x61, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0xe4, 0x01, 0x0a,
	0x0e, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x12,
	0x3a, 0x0a, 0x18, 0x70, 0x72, 0x65, 0x72, 0x65, 0x71, 0x75, 0x69, 0x73, 0x69, 0x74, 0x65, 0x43,
	0x68, 0x65, 0x63, 0x6b, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x18, 0x70, 0x72, 0x65, 0x72, 0x65, 0x71, 0x75, 0x69, 0x73, 0x69, 0x74, 0x65, 0x43,
	0x68, 0x65, 0x63, 0x6b, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x26, 0x0a, 0x0e, 0x75,
	0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0e, 0x75, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x53, 0x75, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x12, 0x26, 0x0a, 0x0e, 0x72, 0x65, 0x73, 0x74, 0x61, 0x72, 0x74, 0x53, 0x75,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x72, 0x65, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x72,
	0x65, 0x74, 0x72, 0x79, 0x41, 0x74, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0c, 0x72, 0x65, 0x74, 0x72, 0x79, 0x41, 0x74, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x12,
	0x10, 0x0a, 0x03, 0x6c, 0x6f, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6c, 0x6f,
	0x67, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x65, 0x72, 0x72, 0x22, 0xa9, 0x01, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x70,
	0x67, 0x72, 0x61, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x28, 0x0a,
	0x0f, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x65, 0x64, 0x4e, 0x65, 0x78, 0x74, 0x53, 0x74, 0x65, 0x70,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x65, 0x64, 0x4e,
	0x65, 0x78, 0x74, 0x53, 0x74, 0x65, 0x70, 0x12, 0x32, 0x0a, 0x14, 0x73, 0x6b, 0x69, 0x70, 0x52,
	0x65, 0x74, 0x72, 0x79, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x65, 0x70, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x14, 0x73, 0x6b, 0x69, 0x70, 0x52, 0x65, 0x74, 0x72, 0x79,
	0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x65, 0x70, 0x12, 0x32, 0x0a, 0x14, 0x74,
	0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x14, 0x74, 0x65, 0x72, 0x6d, 0x69,
	0x6e, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x32,
	0x09, 0x0a, 0x07, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x42, 0x29, 0x5a, 0x27, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x68, 0x69, 0x73, 0x68, 0x69, 0x72,
	0x39, 0x31, 0x35, 0x39, 0x2f, 0x6b, 0x61, 0x70, 0x65, 0x74, 0x61, 0x6e, 0x69, 0x6f, 0x73, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_minor_upgrade_proto_rawDescOnce sync.Once
	file_proto_minor_upgrade_proto_rawDescData = file_proto_minor_upgrade_proto_rawDesc
)

func file_proto_minor_upgrade_proto_rawDescGZIP() []byte {
	file_proto_minor_upgrade_proto_rawDescOnce.Do(func() {
		file_proto_minor_upgrade_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_minor_upgrade_proto_rawDescData)
	})
	return file_proto_minor_upgrade_proto_rawDescData
}

var file_proto_minor_upgrade_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_proto_minor_upgrade_proto_goTypes = []any{
	(*PrerequisitesMinorUpgrade)(nil), // 0: PrerequisitesMinorUpgrade
	(*AvailableVersions)(nil),         // 1: AvailableVersions
	(*UpgradeCompatibility)(nil),      // 2: UpgradeCompatibility
	(*KubeadmUpgrade)(nil),            // 3: kubeadmUpgrade
	(*UpgradePlan)(nil),               // 4: upgradePlan
	(*ClusterUpgradeRequest)(nil),     // 5: clusterUpgradeRequest
	(*ClusterUpgrade)(nil),            // 6: clusterUpgrade
	(*CreateUpgradeResponse)(nil),     // 7: CreateUpgradeResponse
}
var file_proto_minor_upgrade_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_proto_minor_upgrade_proto_init() }
func file_proto_minor_upgrade_proto_init() {
	if File_proto_minor_upgrade_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_minor_upgrade_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_minor_upgrade_proto_goTypes,
		DependencyIndexes: file_proto_minor_upgrade_proto_depIdxs,
		MessageInfos:      file_proto_minor_upgrade_proto_msgTypes,
	}.Build()
	File_proto_minor_upgrade_proto = out.File
	file_proto_minor_upgrade_proto_rawDesc = nil
	file_proto_minor_upgrade_proto_goTypes = nil
	file_proto_minor_upgrade_proto_depIdxs = nil
}
